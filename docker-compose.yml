version: "3"
services:
  redis:
    image: redis:6-alpine
    container_name: redis
    hostname: redis
    ports:
      - "6379:6379/tcp"

#  mosquitto:
#    image: eclipse-mosquitto:2.0.8
#    container_name: mosquitto
#    hostname: mqtt-broker
#    command:
#      - mosquitto
#      - -c
#      - /mosquitto-no-auth.conf
#    ports:
#      - "1883:1883/tcp"

  emqx:
    # https://docs.emqx.io/en/broker/v4.3/getting-started/install.html#create-a-simple-static-cluster-by-docker-compose
    image: emqx/emqx:latest
    container_name: emqx
    hostname: mqtt-broker
    environment:
      - EMQX_LOADED_PLUGINS="emqx_recon,emqx_retainer,emqx_management,emqx_auth_mnesia,emqx_auth_jwt"
      - EMQX_ALLOW_ANONYMOUS=false
      - EMQX_AUTH__USER__1__USERNAME=${MQTT_USERNAME:-admin}
      - EMQX_AUTH__USER__1__PASSWORD=${MQTT_PASSWORD:-public}
      - EMQX_AUTH__JWT__SECRET=secretkey
      - EMQX_AUTH__JWT__FROM=password
# Must Claims value is type string
#      - EMQX_AUTH__JWT__VERIFY_CLAIMS=off
#      - EMQX_AUTH__JWT__VERIFY_CLAIMS__SID=%u

    ports:
      - "1883:1883/tcp"
    healthcheck:
      test: ["CMD", "/opt/emqx/bin/emqx_ctl", "status"]
      interval: 5s
      timeout: 25s
      retries: 5

  postgres:
    image: postgres
    container_name: postgres
    hostname: postgres
    ports:
      - "5432:5432/tcp"
    environment:
      POSTGRES_DB: gosd
      POSTGRES_PASSWORD: 'password'
      PGDATA: '/var/lib/postgresql/data/pgdata'
    volumes:
      - .db:/var/lib/postgresql/data

  swagger:
    image: swaggerapi/swagger-ui
    container_name: swagger
    hostname: swagger
    ports:
      - "8888:8080/tcp"
    environment:
      SWAGGER_JSON: "/app/openapi.json"
      BASE_URL: ""
    volumes:
      - ./swag/swagger.json:/app/openapi.json

networks:
  default:
    name: gosd

