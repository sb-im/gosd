image: golang:1.13.1-buster

stages:
  - build
  - test
#  - broker
  - simulation
  - deploy

.gobuild:
  stage: build
  before_script:
    - go version
  script:
    - make build

go1.11:build:
  image: golang:1.11-buster
  extends: .gobuild

go1.12:build:
  image: golang:1.12-buster
  extends: .gobuild

go1.13:build:
  image: golang:1.13-buster
  extends: .gobuild

go1.14:build:
  image: golang:1.14-buster
  extends: .gobuild

go1.15:build:
  image: golang:1.15-buster
  extends: .gobuild


.gotest:
  stage: test
  services:
    - postgres:13
    - redis:latest
  variables:
    POSTGRES_DB: gosd
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: password
    DATABASE_URL: "postgres://postgres:password@postgres/gosd?sslmode=disable"
    REDIS_URL: "redis://redis:6379/1"
  before_script:
    - go version
  script:
    - make
    - ./gosd -migrate
    - make cover

go1.11:test:
  needs:
    - go1.11:build
  image: golang:1.11-buster
  extends: .gotest

go1.12:test:
  needs:
    - go1.12:build
  image: golang:1.12-buster
  extends: .gotest

go1.13:test:
  needs:
    - go1.13:build
  image: golang:1.13-buster
  extends: .gotest

go1.14:test:
  needs:
    - go1.14:build
  image: golang:1.14-buster
  extends: .gotest

go1.15:test:
  needs:
    - go1.15:build
  image: golang:1.15-buster
  extends: .gotest

#.test-broker:
#  script:
#    - apt-get update -y && apt-get install -y mosquitto-clients redis-server
#    - make test-broker
#
## Must Mosquitto >= 1.6
## https://github.com/eclipse/mosquitto/blob/master/ChangeLog.txt#L616
#test mosquitto 1.6:
#  stage: broker
#  services:
#    - name: eclipse-mosquitto:1.6
#  variables:
#    MQTT: "eclipse-mosquitto:1883"
#  extends: .test-broker
#
## Must Mosquitto >= 2.0.8
## https://github.com/eclipse/mosquitto/issues/2040
#test mosquitto 2.0:
#  stage: broker
#  services:
#    - name: eclipse-mosquitto:2.0.8
#      command:
#        - "mosquitto"
#        - "-c"
#        - "/mosquitto-no-auth.conf"
#  variables:
#    MQTT: "eclipse-mosquitto:1883"
#  extends: .test-broker
#
#test emqx latest:
#  stage: broker
#  services:
#    - name: emqx/emqx:latest
#      alias: emqx
#  variables:
#    MQTT: "emqx:1883"
#  extends: .test-broker
#
#test emqx 4.2.6:
#  stage: broker
#  services:
#    - name: emqx/emqx:4.2.6
#      alias: emqx
#  variables:
#    MQTT: "emqx:1883"
#  extends: .test-broker
#
#test emqx deb:
#  stage: broker
#  before_script:
#    - apt-get update -y && apt-get install -y mosquitto-clients
#    - wget https://github.com/emqx/emqx/releases/download/v4.2.3/emqx-debian10-4.2.3-x86_64.deb
#    - dpkg -i emqx-debian10-4.2.3-x86_64.deb
#    - service emqx start
#  extends: .test-broker

test-simulation:
  stage: simulation
  services:
    - eclipse-mosquitto:1.6
    - postgres:13
  variables:
    MQTT: "eclipse-mosquitto:1883"
    MQTT_URL: "eclipse-mosquitto:1883"
    POSTGRES_DB: gosd
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: password
    DATABASE_URL: "postgres://postgres:password@postgres/gosd?sslmode=disable"
  before_script:
    # - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/sbim/superdock/cloud/ncp.git".insteadOf git@gitlab.com:sbim/superdock/cloud/ncp.git
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/sbim/superdock/cloud/ncp.git
    - cd ncp
    - make
    - make install
    - cd ..
  script:
    - make
    - ./gosd -migrate
    - make test-simulation

deploy_staging:
  stage: deploy
  needs:
    - go1.11:test
    - go1.12:test
    - go1.13:test
    - go1.14:test
    - go1.15:test
  only:
    refs:
      - dev
  before_script:
    - apt-get update -y && apt-get install xz-utils
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval "$(ssh-agent -s)"
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - cp "$SSH_KNOWN_HOSTS" ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - make
    - tar -cJf file.tar.xz gosd data/
    - cat file.tar.xz | ssh ${USER_CLOUD_STAGING}@${HOST_CLOUD_STAGING} 'cd gosd/ && tar -xJf -'

